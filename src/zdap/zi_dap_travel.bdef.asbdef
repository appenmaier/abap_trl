managed implementation in class zbp_dap_travel unique;
strict ( 1 );

define behavior for ZI_DAP_Travel //alias <alias_name>
persistent table zdap_travel
lock master
authorization master ( instance )
//etag master <field_name>
{
  create;
  update;
  delete;

  association _Bookings { create; }

  field ( readonly, numbering : managed ) TravelUuid;
//  field ( readonly ) TravelId, TotalPrice, CurrencyCode, BeginDateCriticality;
  field ( mandatory ) CustomerId, BeginDate, EndDate, Description;
  mapping for zdap_travel corresponding
    {
      BeginDate    = begin_date;
      CurrencyCode = currency_code;
      CustomerId   = customer_id;
      Description  = description;
      EndDate      = end_date;
      TotalPrice   = total_price;
      TravelId     = travel_id;
      TravelUuid   = travel_uuid;
    }

}

define behavior for ZI_DAP_Booking //alias <alias_name>
persistent table zdap_booking
lock dependent by _Travel
authorization dependent by _Travel
//etag master <field_name>
{
  update;
  delete;

  action cancel_booking;

  association _Travel;

  field ( readonly, numbering : managed ) BookingUuid;
  field ( readonly ) TravelUuid;
//  field ( readonly ) BookingDate, Status, StatusCriticality;
  field ( mandatory ) CarrierId, ConnectionId, FlightDate, FlightPrice, CurrencyCode;
  mapping for zdap_booking corresponding
    {
      BookingDate  = booking_Date;
      BookingId    = booking_id;
      BookingUuid  = booking_uuid;
      CarrierId    = carrier_id;
      ConnectionId = connection_id;
      CurrencyCode = currency_code;
      FlightDate   = flight_date;
      FlightPrice  = flight_price;
      Status       = status;
      TravelUuid   = Travel_uuid;
    }

}